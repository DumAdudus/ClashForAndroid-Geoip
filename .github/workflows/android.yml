name: Android CI

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches: [ "geolite.clash.dev" ]
  pull_request:
    branches: [ "geolite.clash.dev" ]

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.geoip_ver_check.outcome }}

    steps:
    - uses: actions/checkout@v3

    - name: Check update for geoip
      id: geoip_ver_check
      shell: bash
      run: ./check_geoip_update.sh
      continue-on-error: true


  build:
    needs: check
    if: needs.check.outputs.status == 'success'

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: gradle

    - name: Set variables
      run: |
        echo "TAG_NAME=$(date --utc '+%m%d%H%M%S')" >> $GITHUB_ENV
        echo "GEOIP_VER=$(curl -s 'https://api.github.com/repos/Loyalsoldier/geoip/releases/latest' | jq -r '.tag_name')" >> $GITHUB_ENV
      shell: bash

    - name: Update local.properties
      run: |
        sed -i "s/^project.version_code=.*/project.version_code=${TAG_NAME}/" local.properties
        sed -i "s/^project.version_name=.*/project.version_name=${TAG_NAME}/" local.properties
        cat local.properties
      shell: bash
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Gradle clean
      run: ./gradlew clean
    - name: Build with Gradle
      run: ./gradlew app:assembleRelease

    - name: Upload files to GitHub release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file_glob: true
        file: ./app/build/outputs/apk/release/*
        tag: ${{ env.TAG_NAME }}

    - name: Git push json to "release_info" branch
      run: |
        apk_name=$(basename $(ls ./app/build/outputs/apk/release/*.apk))
        apk_name=$(echo "$apk_name" | sed 's/(\([0-9]\+\))/.\1/g')
        mkdir -p release_info
        cd release_info || exit 1
        echo "{\"newVersion\": ${TAG_NAME}, \"downloadUrl\": \"https://github.com/DumAdudus/ClashForAndroid-Geoip/releases/download/${TAG_NAME}/${apk_name}\", \"geoipVer\": ${GEOIP_VER}}" | jq '{newVersion, downloadUrl, geoipVer}' > version_info.json
        git init
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git checkout -b release_info
        git add -A
        git commit -m "${{ env.TAG_NAME }}"
        git remote add android_geoip_release_info "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
        git push -f -u android_geoip_release_info release_info
